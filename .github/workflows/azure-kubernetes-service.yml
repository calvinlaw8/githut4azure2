name: Build and deploy an app to AKS

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: calvintestaksregistry
  CONTAINER_NAME: your-container-name
  RESOURCE_GROUP: AKSKPI
  CLUSTER_NAME: testaks
  DEPLOYMENT_MANIFEST_PATH: manifests:/k8s.yaml

jobs:
  buildImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      # 检查仓库代码
      - uses: actions/checkout@v4

      # 使用 OIDC 登录 Azure
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: 852800df-0194-4956-add1-8d42e8adf1e5
          tenant-id: 112c9ed4-6357-45bb-bbe9-018fdb35e8ee
          subscription-id: f2d7fc8e-0250-45cb-971c-5a6f976cb204

      # 构建镜像并推送到 Azure 容器注册表 (ACR)
      - name: Build and push image to ACR
        run: |
          az acr build --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} .

  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: [buildImage]
    steps:
      # 检查仓库代码
      - uses: actions/checkout@v4

      # 使用 OIDC 登录 Azure
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # 设置 kubelogin 用于非交互式登录
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      # 获取 AKS 集群的 kubeconfig 文件
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      # 根据给定的 manifest 文件部署应用
      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
          images: |
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
